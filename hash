#include <iostream>

struct node
{
	char login[10];
	int res;
	int ans[3];
	int block;

}p;

char ans1[20] = "blue";
char ans2[20] = "Putin";
char ans3[20] = "robot";


int HF(char* x)
{
	int i = 0, sum = 0;
	while (x[i] != '\0')
	{
		sum = sum + x[i];
		i++;
	}
	return sum % 100;
}

char ravni(char* s1, char* s2)
{
	int n = 0;
	while (s1[n] + s2[n] != 0 && s1[n] == s2[n]) n++;
	return (s1[n] == '\0' && s2[n] == '\0');

}

void registration(FILE* f)
{
	fseek(f, 0, SEEK_SET);
	node p;
	fread(&p, sizeof(p), 1, f);
	int n = p.res, t = 0;
	fseek(f, 0, SEEK_SET);
	p.res++;
	fwrite(&p, sizeof(p), 1, f);
	char s1[10], s2[10], flag;
	do
	{
		flag = 0;
		printf("come up with login\n");
		scanf_s("%s", s1, 10);
		for (int i = 0; i < n; i++)
		{
			fread(&p, sizeof(p), 1, f);
			if (ravni(s1, p.login)) {
				flag = 1;
				printf("alredy reserved\n");
				break;
			}

		}
	} while (flag);

	while (s1[t] != '\0')
	{
		p.login[t] = s1[t];
		t++;
	}
	p.login[t + 1] = '\0';
	//fseek(f, 0, SEEK_CUR);
	printf("enter password\n");
	scanf_s("%s", s2, 10);
	p.res = HF(s2);
	p.ans[0] = HF(ans1);
	p.ans[1] = HF(ans2);
	p.ans[2] = HF(ans3);
	fwrite(&p, sizeof(p), 1, f);

}

int login(FILE* f)
{
	fseek(f, 0, SEEK_SET);
	node p;
	fread(&p, sizeof(p), 1, f);
	int n = p.res;
	printf("enter login\n");
	char log[10], pw[10], g = 0, k = 0;
	int flag;
	scanf_s("%s", log, 10);
	for (int i = 0; i < n; i++)
	{
		fread(&p, sizeof(p), 1, f);
		if (ravni(p.login, log))
		{
			g++;
			printf("enter password\n");
			do
			{
				if (p.block == 1)
				{
					printf("blocked\n");
					fseek(f, -1 * sizeof(p), SEEK_CUR);
					fwrite(&p, sizeof(p), 1, f);
					return 0;
				}
				flag = 0;
				k++;
				scanf_s("%s", pw, 10);
				if (HF(pw) == p.res) printf("log in succesful\n");
				else {
					flag++;
					printf("wrong password\n");
				}
				if (k == 3)
				{
					p.block = 1;
				}
			} while (flag);
			/*fseek(f, -1*sizeof(p), SEEK_CUR);
			fwrite(&p, sizeof(p), 1, f);*/
		}
	}
	if (!g) printf("don't exist\n");
}

void forgotpw(FILE* f)
{
	fseek(f, 0, SEEK_SET);
	char vopr1[30] = "which color is sky";
	char vopr2[30] = "who is your president";
	char vopr3[30] = "bip boop";

	/*char ans1[20] = "blue", ans1p[20]="";
	char ans2[20] = "Putin", ans2p[20]="";
	char ans3[20] = "i_am_a_robot", ans3p[20]="";*/

	char ans1p[20] = "", ans2p[20] = "", ans3p[20] = "";

	//int a = HF(ans1), b = HF(ans2), c = HF(ans3);
	node p;
	fread(&p, sizeof(p), 1, f);
	int n = p.res;
	printf("enter login\n");
	char log[10], pw[10], g = 0;
	int flag = 0;
	scanf_s("%s", log, 10);
	for (int i = 0; i < n; i++)
	{
		fread(&p, sizeof(node), 1, f);
		if (ravni(p.login, log))
		{
			g++;
			printf("answer the qw\n");
			puts(vopr1); printf("\n");
			scanf_s("%s", ans1p, 20);
			if (HF(ans1p) == p.ans[0]) flag++;
			puts(vopr2); printf("\n");
			scanf_s("%s", ans2p, 20);
			if (HF(ans2p) == p.ans[1]) flag++;
			puts(vopr3); printf("\n");
			scanf_s("%s", ans3p, 20);
			if (HF(ans3p) == p.ans[2]) flag++;
			if (flag == 3)
			{
				printf("come up with new pw\n");
				fseek(f, (i + 1) * sizeof(node), SEEK_SET);
				fread(&p, sizeof(node), 1, f);
				fseek(f, (i + 1) * sizeof(node), SEEK_SET);
				scanf_s("%s", pw, 10);
				p.res = HF(pw);
				fwrite(&p, sizeof(p), 1, f);
			}
		}
	}
	flag = 3;
	if (flag != 3) printf("try again\n");
	if (g == 0) printf("don't exist\n");

}

void deblock(FILE* f)
{
	char vopr1[30] = "which color is sky";
	fseek(f, 0, SEEK_SET);
	node p;
	fread(&p, sizeof(p), 1, f);
	int n = p.res;
	printf("enter login\n");
	char log[10], a[10], g = 0, k = 0;
	int flag;
	scanf_s("%s", log, 10);
	for (int i = 0; i < n; i++)
	{
		fread(&p, sizeof(p), 1, f);
		if (ravni(p.login, log))
		{
			g++;
			puts(vopr1);
			scanf_s("%s", a, 10);
			if (HF(a) == p.ans[0])
			{
				p.block = 0;
				fseek(f, -1 * sizeof(p), SEEK_CUR);
				fwrite(&p, sizeof(p), 1, f);
			}
			else printf("try again\n");
		}
	}
	if
		(!g) printf("don't exist\n");
}

void printdb(FILE* f)
{
	node p;
	fseek(f, 0, SEEK_SET);
	fread(&p, sizeof(p), 1, f);
	int n = p.res, t = 0;
	for (int i = 0; i < n; i++)
	{
		fread(&p, sizeof(node), 1, f);
		printf("%s %d\n", p.login, p.res);
	}
}

int main()
{
	int N;
	FILE* f;
	fopen_s(&f, "C:\\Users\\JakJa\\OneDrive\\Рабочий стол\\readme.txt", "r+");
	fread(&p, sizeof(node), 1, f);
	N = p.res;
	printf("%d\n", N);
	int ch;
	do {
		printf(" 1 for sign up\n");
		printf(" 2 for log in\n");
		printf(" 3 for forgot the password\n");
		printf(" 4 for exit\n");
		printf(" 5 for check (service)\n");
		printf(" 6 for deblock\n");
		scanf_s("%d", &ch);
		if (ch == 1)
		{
			registration(f);
		}
		if (ch == 2)
		{
			login(f);
		}
		if (ch == 3)
		{
			forgotpw(f);
		}
		if (ch == 5)
		{
			printdb(f);
		}
		if (ch == 6)
		{
			deblock(f);
		}
	} while (ch != 4);
}
